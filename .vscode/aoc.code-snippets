{
	// Place your advent-of-code workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"A* Template": {
		"scope": "python",
		"prefix": "aoc:astar",
		"body": [
			"def state_from_input(input):",
			"    ...$2",
			""
			"def neighbors(state):",
			"    result = []",
			"    ...",
			"    return result",
			"",
			"def heuristic(state):",
			"    return 0.0",
			"",
			"def is_goal(state):",
			"    ...$3",
			"    return False",
			"",
			"initial_state = state_from_input($1)",
			"",
			"ans = None"
			"for (cost, state, path) in astar(initial_state, neighbors, heuristic, init_cost=0):",
			"    if is_goal(state):",
			"        ans = cost",
			"        break",
			"print(ans)"
		]
	}
}
